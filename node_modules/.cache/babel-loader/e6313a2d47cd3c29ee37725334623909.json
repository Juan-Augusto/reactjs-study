{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useReducer } from \"react\";\nconst initialState = {\n  count: 0\n};\n\nconst reducerFunction = (state, action) => {\n  switch (action.type) {\n    case 'ADD':\n      return { ...state,\n        count: state.count + 1\n      };\n      break;\n\n    case 'DEL':\n      if (state.count > 0) {\n        return { ...state,\n          count: state.count - 1\n        };\n      }\n\n      break;\n\n    case 'RESET':\n      return initialState;\n      break;\n  }\n\n  return state;\n};\n\nconst Reducer = () => {\n  _s();\n\n  return useReducer(reducerFunction, initialState);\n};\n\n_s(Reducer, \"skVOqNGrFQuDFh+lpttAJ2AZFeA=\");\n\n_c = Reducer;\nexport default Reducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reducer\");","map":{"version":3,"sources":["C:/Users/USUARIO/reactjs-study/src/Reducer/ReducerUse.jsx"],"names":["useReducer","initialState","count","reducerFunction","state","action","type","Reducer"],"mappings":";;AAAA,SAASA,UAAT,QAA2B,OAA3B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE;AADU,CAArB;;AAGA,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACvC,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,KAAL;AACI,aAAO,EAAC,GAAGF,KAAJ;AAAWF,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,GAAc;AAAhC,OAAP;AACJ;;AACA,SAAK,KAAL;AACI,UAAGE,KAAK,CAACF,KAAN,GAAc,CAAjB,EAAmB;AACf,eAAO,EAAC,GAAGE,KAAJ;AAAWF,UAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,GAAc;AAAhC,SAAP;AACH;;AACL;;AACA,SAAK,OAAL;AACI,aAAOD,YAAP;AACJ;AAXJ;;AAaA,SAAOG,KAAP;AACH,CAfD;;AAiBA,MAAMG,OAAO,GAAG,MAAM;AAAA;;AAClB,SAAOP,UAAU,CAACG,eAAD,EAAkBF,YAAlB,CAAjB;AAEH,CAHD;;GAAMM,O;;KAAAA,O;AAKN,eAAeA,OAAf","sourcesContent":["import { useReducer } from \"react\";\r\n\r\nconst initialState = { \r\n    count: 0 \r\n};\r\nconst reducerFunction = (state, action) => {\r\n    switch(action.type){\r\n        case 'ADD':\r\n            return {...state, count: state.count + 1};\r\n        break;\r\n        case 'DEL':\r\n            if(state.count > 0){\r\n                return {...state, count: state.count - 1};\r\n            }\r\n        break;\r\n        case 'RESET':\r\n            return initialState;\r\n        break;\r\n    }\r\n    return state;\r\n}\r\n\r\nconst Reducer = () => {\r\n    return useReducer(reducerFunction, initialState);\r\n        \r\n};\r\n\r\nexport default Reducer; "]},"metadata":{},"sourceType":"module"}