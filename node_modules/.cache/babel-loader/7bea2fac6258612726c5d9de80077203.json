{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USUARIO\\\\reactjs-study\\\\src\\\\Reducer\\\\peopleList.jsx\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from \"react\";\nimport { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = [];\n\nconst reducerList = (state, action) => {\n  var _action$payload, _action$payload3;\n\n  switch (action.type) {\n    case \"ADD\":\n      if ((_action$payload = action.payload) !== null && _action$payload !== void 0 && _action$payload.name) {\n        var _action$payload2;\n\n        const newState = [...state];\n        state.push({\n          id: uuidv4(),\n          name: (_action$payload2 = action.payload) === null || _action$payload2 === void 0 ? void 0 : _action$payload2.name\n        });\n        return newState;\n      }\n\n      break;\n\n    case \"DEL\":\n      if ((_action$payload3 = action.payload) !== null && _action$payload3 !== void 0 && _action$payload3.id) {\n        let newState = [...state];\n        newState = newState.filter(item => {\n          var _action$payload4;\n\n          return item.id !== ((_action$payload4 = action.payload) === null || _action$payload4 === void 0 ? void 0 : _action$payload4.id);\n        });\n        return newState;\n      }\n\n      break;\n\n    case \"ORDER\":\n      let newState = [...state];\n      state = state.sort((a, b) => a.name > b.name ? 1 : -1);\n      return newState;\n      break;\n  }\n\n  return state;\n};\n\nconst PeopleList = () => {\n  _s();\n\n  const [list, dispatchList] = PeopleList();\n  const [nameInput, setNameInput] = useState(\"\");\n\n  const handleAddButton = () => {\n    if (nameInput) {\n      dispatchList({\n        type: \"ADD\",\n        payload: {\n          name: nameInput\n        }\n      });\n    }\n  };\n\n  const handleInputChange = e => {\n    setNameInput(e.target.value);\n  };\n\n  const deletePerson = id => {\n    dispatchList({\n      type: \"DEL\",\n      payload: {\n        id\n      }\n    });\n  };\n\n  const handleOrderButton = () => {\n    dispatchList({\n      type: \"ORDER\"\n    });\n  };\n\n  return useReducer(reducerList, initialState), /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Lista de pessoas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: nameInput,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddButton,\n        children: \"Adicionar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleOrderButton,\n        children: \"Ordenar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: list.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [item.name, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deletePerson(item.id),\n          children: \"DELETAR\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 7\n  }, this);\n};\n\n_s(PeopleList, \"0+TnJbzFYEUHSTSPXboAEyqVQ9Q=\");\n\n_c = PeopleList;\nexport default PeopleList;\n\nvar _c;\n\n$RefreshReg$(_c, \"PeopleList\");","map":{"version":3,"sources":["C:/Users/USUARIO/reactjs-study/src/Reducer/peopleList.jsx"],"names":["useReducer","useState","v4","uuidv4","initialState","reducerList","state","action","type","payload","name","newState","push","id","filter","item","sort","a","b","PeopleList","list","dispatchList","nameInput","setNameInput","handleAddButton","handleInputChange","e","target","value","deletePerson","handleOrderButton","map","index"],"mappings":"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","sourcesContent":["import { useReducer } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst initialState = [];\r\nconst reducerList = (state, action) => {\r\n  switch (action.type) {\r\n    case \"ADD\":\r\n      if (action.payload?.name) {\r\n        const newState = [...state];\r\n        state.push({\r\n          id: uuidv4(),\r\n          name: action.payload?.name,\r\n        });\r\n        return newState;\r\n      }\r\n      break;\r\n    case \"DEL\":\r\n      if (action.payload?.id) {\r\n        let newState = [...state];\r\n        newState = newState.filter((item) => item.id !== action.payload?.id);\r\n        return newState;\r\n      }\r\n      break;\r\n    case \"ORDER\":\r\n      let newState = [...state];\r\n      state = state.sort((a, b) => (a.name > b.name ? 1 : -1));\r\n      return newState;\r\n      break;\r\n  }\r\n  return state;\r\n};\r\n\r\nconst PeopleList = () => {\r\n    \r\n  const [list, dispatchList] = PeopleList();\r\n  const [nameInput, setNameInput] = useState(\"\");\r\n  const handleAddButton = () => {\r\n    if (nameInput) {\r\n      dispatchList({\r\n        type: \"ADD\",\r\n        payload: {\r\n          name: nameInput,\r\n        },\r\n      });\r\n    }\r\n  };\r\n  const handleInputChange = (e) => {\r\n    setNameInput(e.target.value);\r\n  };\r\n  const deletePerson = (id) => {\r\n    dispatchList({\r\n      type: \"DEL\",\r\n      payload: { id },\r\n    });\r\n  };\r\n  const handleOrderButton = () => {\r\n    dispatchList({\r\n      type: \"ORDER\",\r\n    });\r\n  };\r\n  return (\r\n    useReducer(reducerList, initialState),\r\n    (\r\n      <div>\r\n        <div>\r\n          <h1>Lista de pessoas</h1>\r\n          <input type=\"text\" value={nameInput} onChange={handleInputChange} />\r\n          <button onClick={handleAddButton}>Adicionar</button>\r\n          <button onClick={handleOrderButton}>Ordenar</button>\r\n        </div>\r\n        <ul>\r\n          {list.map((item, index) => (\r\n            <li key={index}>\r\n              {item.name}\r\n              <button onClick={() => deletePerson(item.id)}>DELETAR</button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    )\r\n  );\r\n};\r\nexport default PeopleList;\r\n"]},"metadata":{},"sourceType":"module"}