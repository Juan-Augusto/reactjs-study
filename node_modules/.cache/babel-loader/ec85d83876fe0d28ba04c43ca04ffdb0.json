{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USUARIO\\\\reactjs-study\\\\src\\\\Reducer\\\\peopleList.jsx\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from \"react\";\nimport { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = [];\n\nconst reducerList = (state, action) => {\n  var _action$payload, _action$payload2;\n\n  switch (action.type) {\n    case \"ADD\":\n      state.push({\n        id: uuidv4(),\n        name: (_action$payload = action.payload) === null || _action$payload === void 0 ? void 0 : _action$payload.name\n      });\n      break;\n\n    case \"DEL\":\n      if ((_action$payload2 = action.payload) !== null && _action$payload2 !== void 0 && _action$payload2.id) {\n        state = state.filter(item => {\n          var _action$payload3;\n\n          return item.id !== ((_action$payload3 = action.payload) === null || _action$payload3 === void 0 ? void 0 : _action$payload3.id);\n        });\n      }\n\n      break;\n\n    case \"ORDER\":\n      state = state.sort((a, b) => a.name > b.name ? 1 : -1);\n      break;\n  }\n\n  return state;\n};\n\nexport const PeopleList = () => {\n  _s();\n\n  const [list, dispatchList] = PeopleList();\n  const [nameInput, setNameInput] = useState(\"\");\n\n  const handleAddButton = () => {\n    if (nameInput) {\n      dispatchList({\n        type: \"ADD\",\n        payload: {\n          name: nameInput\n        }\n      });\n    }\n  };\n\n  const handleInputChange = e => {\n    setNameInput(e.target.value);\n  };\n\n  return useReducer(reducerList, initialState), /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: nameInput,\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddButton,\n      children: \"Adicionar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Lista de pessoas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: list.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: item.name\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 7\n  }, this);\n};\n\n_s(PeopleList, \"0+TnJbzFYEUHSTSPXboAEyqVQ9Q=\");\n\n_c = PeopleList;\n\nvar _c;\n\n$RefreshReg$(_c, \"PeopleList\");","map":{"version":3,"sources":["C:/Users/USUARIO/reactjs-study/src/Reducer/peopleList.jsx"],"names":["useReducer","useState","v4","uuidv4","initialState","reducerList","state","action","type","push","id","name","payload","filter","item","sort","a","b","PeopleList","list","dispatchList","nameInput","setNameInput","handleAddButton","handleInputChange","e","target","value","map","index"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;;AAEA,MAAMC,YAAY,GAAG,EAArB;;AACA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAAA;;AACrC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,KAAL;AACEF,MAAAA,KAAK,CAACG,IAAN,CAAW;AACTC,QAAAA,EAAE,EAAEP,MAAM,EADD;AAETQ,QAAAA,IAAI,qBAAEJ,MAAM,CAACK,OAAT,oDAAE,gBAAgBD;AAFb,OAAX;AAIA;;AACF,SAAK,KAAL;AACE,8BAAIJ,MAAM,CAACK,OAAX,6CAAI,iBAAgBF,EAApB,EAAwB;AACtBJ,QAAAA,KAAK,GAAGA,KAAK,CAACO,MAAN,CAAcC,IAAD;AAAA;;AAAA,iBAAUA,IAAI,CAACJ,EAAL,0BAAYH,MAAM,CAACK,OAAnB,qDAAY,iBAAgBF,EAA5B,CAAV;AAAA,SAAb,CAAR;AACD;;AACD;;AACF,SAAK,OAAL;AACEJ,MAAAA,KAAK,GAAGA,KAAK,CAACS,IAAN,CAAW,CAACC,CAAD,EAAIC,CAAJ,KAAWD,CAAC,CAACL,IAAF,GAASM,CAAC,CAACN,IAAX,GAAkB,CAAlB,GAAsB,CAAC,CAA7C,CAAR;AACA;AAdJ;;AAgBA,SAAOL,KAAP;AACD,CAlBD;;AAoBA,OAAO,MAAMY,UAAU,GAAG,MAAM;AAAA;;AAC9B,QAAM,CAACC,IAAD,EAAOC,YAAP,IAAuBF,UAAU,EAAvC;AAEA,QAAM,CAACG,SAAD,EAAYC,YAAZ,IAA4BrB,QAAQ,CAAC,EAAD,CAA1C;;AACA,QAAMsB,eAAe,GAAG,MAAM;AAC5B,QAAIF,SAAJ,EAAe;AACbD,MAAAA,YAAY,CAAC;AACXZ,QAAAA,IAAI,EAAE,KADK;AAEXI,QAAAA,OAAO,EAAE;AACPD,UAAAA,IAAI,EAAEU;AADC;AAFE,OAAD,CAAZ;AAMD;AACF,GATD;;AAUA,QAAMG,iBAAiB,GAAIC,CAAD,IAAO;AAC/BH,IAAAA,YAAY,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,CAAZ;AACD,GAFD;;AAGA,SACE3B,UAAU,CAACK,WAAD,EAAcD,YAAd,CAAV,eAEE;AAAA,4BACE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,KAAK,EAAEiB,SAA1B;AAAqC,MAAA,QAAQ,EAAEG;AAA/C;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,OAAO,EAAED,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAA,gBACGJ,IAAI,CAACS,GAAL,CAAS,CAACd,IAAD,EAAOe,KAAP,kBACR;AAAA,kBAAiBf,IAAI,CAACH;AAAtB,SAASkB,KAAT;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UAHJ;AAeD,CAhCM;;GAAMX,U;;KAAAA,U","sourcesContent":["import { useReducer } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst initialState = [];\r\nconst reducerList = (state, action) => {\r\n  switch (action.type) {\r\n    case \"ADD\":\r\n      state.push({\r\n        id: uuidv4(),\r\n        name: action.payload?.name,\r\n      });\r\n      break;\r\n    case \"DEL\":\r\n      if (action.payload?.id) {\r\n        state = state.filter((item) => item.id !== action.payload?.id);\r\n      }\r\n      break;\r\n    case \"ORDER\":\r\n      state = state.sort((a, b) => (a.name > b.name ? 1 : -1));\r\n      break;\r\n  }\r\n  return state;\r\n};\r\n\r\nexport const PeopleList = () => {\r\n  const [list, dispatchList] = PeopleList();\r\n\r\n  const [nameInput, setNameInput] = useState(\"\");\r\n  const handleAddButton = () => {\r\n    if (nameInput) {\r\n      dispatchList({\r\n        type: \"ADD\",\r\n        payload: {\r\n          name: nameInput,\r\n        },\r\n      });\r\n    }\r\n  };\r\n  const handleInputChange = (e) => {\r\n    setNameInput(e.target.value);\r\n  };\r\n  return (\r\n    useReducer(reducerList, initialState),\r\n    (\r\n      <div>\r\n        <input type=\"text\" value={nameInput} onChange={handleInputChange} />\r\n        <button onClick={handleAddButton}>Adicionar</button>\r\n        <h1>Lista de pessoas</h1>\r\n        <ul>\r\n          {list.map((item, index) => (\r\n            <li key={index}>{item.name}</li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    )\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}