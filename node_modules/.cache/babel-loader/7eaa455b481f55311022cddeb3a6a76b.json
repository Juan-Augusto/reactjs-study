{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USUARIO\\\\reactjs-study\\\\src\\\\components\\\\JSONPlaceholder\\\\JSONPlaceholder.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { PostForm } from \"./PostForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst JSONPlaceholder = () => {\n  _s();\n\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    loadPosts();\n  }, []);\n\n  const loadPosts = async () => {\n    setLoading(true);\n    let response = await fetch(\"https://jsonplaceholder.typicode.com/posts\");\n    let json = await response.json();\n    setLoading(false);\n    setPosts(json);\n  };\n\n  const handleAddPost = async (title, body) => {\n    let response = await fetch(\"https://jsonplaceholder.typicode.com/posts\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        title,\n        body,\n        userId: 1\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    let json = await response.json();\n\n    if (json.id) {\n      alert(\"Post adicionado com sucesso!\");\n    } else {\n      alert(\"Ocorreu algum erro :(\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Carregando...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(PostForm, {\n      onAdd: handleAddPost\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: !loading && posts.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"my-10\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Total de Posts: \", posts.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: posts.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          border: \"1px solid black\",\n          borderRadius: \"10px\",\n          marginBottom: \"10px\",\n          padding: \"10px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"font-bold\",\n          children: item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: [\"#\", item.id, \" - Usu\\xE1rio: \", item.userId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: item.body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), !loading && posts.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"N\\xE3o h\\xE1 posts para serem exibidos.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(JSONPlaceholder, \"B1HzkMAPjjnIS0Dl8KHRKFHtmnE=\");\n\n_c = JSONPlaceholder;\nexport default JSONPlaceholder;\n\nvar _c;\n\n$RefreshReg$(_c, \"JSONPlaceholder\");","map":{"version":3,"sources":["C:/Users/USUARIO/reactjs-study/src/components/JSONPlaceholder/JSONPlaceholder.jsx"],"names":["useEffect","useState","PostForm","JSONPlaceholder","posts","setPosts","loading","setLoading","loadPosts","response","fetch","json","handleAddPost","title","body","method","JSON","stringify","userId","headers","id","alert","length","map","item","index","border","borderRadius","marginBottom","padding"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { PostForm } from \"./PostForm\";\r\n\r\nconst JSONPlaceholder = () => {\r\n  const [posts, setPosts] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  useEffect(() => {\r\n    loadPosts();\r\n  }, []);\r\n  const loadPosts = async () => {\r\n    setLoading(true);\r\n    let response = await fetch(\"https://jsonplaceholder.typicode.com/posts\");\r\n    let json = await response.json();\r\n    setLoading(false);\r\n    setPosts(json);\r\n  };\r\n  const handleAddPost = async (title, body) => {\r\n    let response = await fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        title,\r\n        body,\r\n        userId: 1,\r\n      }),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n    let json = await response.json();\r\n\r\n    if (json.id) {\r\n      alert(\"Post adicionado com sucesso!\");\r\n    } else {\r\n      alert(\"Ocorreu algum erro :(\");\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      {loading && <div>Carregando...</div>}\r\n      <PostForm onAdd={handleAddPost} />\r\n      <div>\r\n        {!loading && posts.length > 0 && (\r\n          <div className=\"my-10\">\r\n            <h1>Total de Posts: {posts.length}</h1>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div>\r\n        {posts.map((item, index) => (\r\n          <div\r\n            key={index}\r\n            style={{\r\n              border: \"1px solid black\",\r\n              borderRadius: \"10px\",\r\n              marginBottom: \"10px\",\r\n              padding: \"10px\",\r\n            }}\r\n          >\r\n            <h4 className=\"font-bold\">{item.title}</h4>\r\n            <small>\r\n              #{item.id} - Usuário: {item.userId}\r\n            </small>\r\n            <p>{item.body}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      {!loading && posts.length === 0 && (\r\n        <div>\r\n          <h1>Não há posts para serem exibidos.</h1>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default JSONPlaceholder;\r\n"]},"metadata":{},"sourceType":"module"}