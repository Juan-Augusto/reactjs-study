{"ast":null,"code":"import _asyncToGenerator from\"C:\\\\Users\\\\USUARIO\\\\reactjs-study\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";import _regeneratorRuntime from\"C:\\\\Users\\\\USUARIO\\\\reactjs-study\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import axios from\"axios\";var axiosInstance=axios.create({baseURL:\"https://jsonplaceholder.typicode.com\"});export var api={getAllPosts:function(){var _getAllPosts=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axiosInstance.get('/posts');case 2:response=_context.sent;return _context.abrupt(\"return\",response.data);case 4:case\"end\":return _context.stop();}}},_callee);}));function getAllPosts(){return _getAllPosts.apply(this,arguments);}return getAllPosts;}(),addNewPost:function(){var _addNewPost=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(title,body,userId){var response;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return axiosInstance.post('/posts',{title:title,body:body,userId:userId});case 2:response=_context2.sent;return _context2.abrupt(\"return\",response.data);case 4:case\"end\":return _context2.stop();}}},_callee2);}));function addNewPost(_x,_x2,_x3){return _addNewPost.apply(this,arguments);}return addNewPost;}()};","map":{"version":3,"sources":["C:/Users/USUARIO/reactjs-study/src/api.js"],"names":["axios","axiosInstance","create","baseURL","api","getAllPosts","get","response","data","addNewPost","title","body","userId","post"],"mappings":"4PAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,GAAMC,CAAAA,aAAa,CAAGD,KAAK,CAACE,MAAN,CAAa,CACjCC,OAAO,CAAE,sCADwB,CAAb,CAAtB,CAGA,MAAO,IAAMC,CAAAA,GAAG,CAAG,CACfC,WAAW,qFAAE,sKACYJ,CAAAA,aAAa,CAACK,GAAd,CAAkB,QAAlB,CADZ,QACLC,QADK,+CAEFA,QAAQ,CAACC,IAFP,wDAAF,2FADI,CAQfC,UAAU,oFAAE,kBAAOC,KAAP,CAAcC,IAAd,CAAoBC,MAApB,0JACaX,CAAAA,aAAa,CAACY,IAAd,CAAmB,QAAnB,CAA6B,CAChDH,KAAK,CAALA,KADgD,CACzCC,IAAI,CAAJA,IADyC,CACnCC,MAAM,CAANA,MADmC,CAA7B,CADb,QACJL,QADI,iDAIDA,QAAQ,CAACC,IAJR,0DAAF,kGARK,CAAZ","sourcesContent":["import axios from \"axios\";\r\n\r\nconst axiosInstance = axios.create({\r\n  baseURL: \"https://jsonplaceholder.typicode.com\"\r\n})\r\nexport const api = {\r\n    getAllPosts: async () => {\r\n        let response = await axiosInstance.get('/posts')\r\n        return response.data;\r\n        // let response = await fetch(`${baseURL}/posts`);\r\n        // let json = await response.json();\r\n        // return json;\r\n    },\r\n    addNewPost: async (title, body, userId) => {\r\n        let response = await axiosInstance.post('/posts', {\r\n          title, body, userId\r\n        });\r\n        return response.data;\r\n\r\n        // let response = await fetch(`${baseURL}/posts`, {\r\n        //     method: \"POST\",\r\n        //     body: JSON.stringify({\r\n        //       title,\r\n        //       body,\r\n        //       userId\r\n        //     }),\r\n        //     headers: {\r\n        //       \"Content-Type\": \"application/json\",\r\n        //     },\r\n        //   });\r\n        //   let json = await response.json();\r\n        //   return json;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}