{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USUARIO\\\\reactjs-study\\\\src\\\\components\\\\JSONPlaceholder\\\\JSONPlaceholder.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst JSONPlaceholder = () => {\n  _s();\n\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [addTitleText, setAddTitleText] = useState('');\n  const [addBodyText, setAddBodyText] = useState('');\n  useEffect(() => {\n    loadPosts();\n  }, []);\n\n  const loadPosts = async () => {\n    setLoading(true);\n    let response = await fetch('https://jsonplaceholder.typicode.com/posts');\n    let json = await response.json();\n    setLoading(false);\n    setPosts(json);\n  };\n\n  const handleAddTitleChange = e => {\n    setAddTitleText(e.target.value);\n  };\n\n  const handleAddBodyChange = e => {\n    setAddBodyText(e.target.value);\n  };\n\n  const handleAddClick = async () => {\n    if (addBodyText && addTitleText) {\n      let response = await fetch('https://jsonplaceholder.typicode.com/posts', {\n        method: 'POST',\n        body: JSON.stringify({\n          title: addTitleText,\n          body: addBodyText,\n          userId: 1\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      let json = await response.json();\n      console.log(json);\n    } else {\n      alert(\"Preencha os dados!\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Carregando...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      className: \"border-2 mb-3 p-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Adicionar um novo post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: handleAddTitleChange,\n        placeholder: \"Digite um t\\xEDtulo\",\n        className: \"block\",\n        value: addTitleText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        onChange: handleAddBodyChange,\n        className: \"block border\",\n        children: addBodyText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"block\",\n        onClick: handleAddClick,\n        children: \"Adicionar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: !loading && posts.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"my-10\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Total de Posts: \", posts.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: posts.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          border: '1px solid black',\n          borderRadius: '10px',\n          marginBottom: '10px',\n          padding: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"font-bold\",\n          children: item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: [\"#\", item.id, \" - Usu\\xE1rio: \", item.userId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: item.body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), !loading && posts.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"N\\xE3o h\\xE1 posts para serem exibidos.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n\n_s(JSONPlaceholder, \"vdqLaFII0PyzhrKc3fXxPVzWqFY=\");\n\n_c = JSONPlaceholder;\nexport default JSONPlaceholder;\n\nvar _c;\n\n$RefreshReg$(_c, \"JSONPlaceholder\");","map":{"version":3,"sources":["C:/Users/USUARIO/reactjs-study/src/components/JSONPlaceholder/JSONPlaceholder.jsx"],"names":["useEffect","useState","JSONPlaceholder","posts","setPosts","loading","setLoading","addTitleText","setAddTitleText","addBodyText","setAddBodyText","loadPosts","response","fetch","json","handleAddTitleChange","e","target","value","handleAddBodyChange","handleAddClick","method","body","JSON","stringify","title","userId","headers","console","log","alert","length","map","item","index","border","borderRadius","marginBottom","padding","id"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nconst JSONPlaceholder = () => {\r\n    const [posts, setPosts] = useState([])\r\n    const [loading, setLoading] = useState(false);\r\n    const [addTitleText, setAddTitleText] = useState('');\r\n    const [addBodyText, setAddBodyText] = useState('');\r\n    useEffect(() =>{\r\n        loadPosts();\r\n    }, []);\r\n    const loadPosts = async () => {\r\n        setLoading(true);\r\n        let response = await fetch('https://jsonplaceholder.typicode.com/posts');\r\n        let json = await response.json();\r\n        setLoading(false);\r\n        setPosts(json);\r\n    };\r\n    const handleAddTitleChange = ( e ) => {\r\n        setAddTitleText(e.target.value);\r\n    };\r\n    const handleAddBodyChange = ( e ) => {\r\n        setAddBodyText(e.target.value);\r\n    };\r\n    const handleAddClick = async () => {\r\n        if(addBodyText && addTitleText){\r\n            let response = await fetch('https://jsonplaceholder.typicode.com/posts', {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                title: addTitleText,\r\n                body: addBodyText,\r\n                userId: 1\r\n            }),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        });\r\n        let json = await response.json();\r\n        console.log(json);\r\n        } else{\r\n            alert(\"Preencha os dados!\")\r\n        }\r\n    }\r\n    return(\r\n        <div>\r\n            {loading &&\r\n                <div>\r\n                    Carregando...\r\n                </div>\r\n            }\r\n            <fieldset className=\"border-2 mb-3 p-3\">\r\n                <legend>\r\n                    <h2>Adicionar um novo post</h2>\r\n                </legend>\r\n\r\n                    <input \r\n                        type=\"text\" \r\n                        onChange={handleAddTitleChange}\r\n                        placeholder=\"Digite um título\" \r\n                        className=\"block\" \r\n                        value={addTitleText}\r\n                        />\r\n                    <textarea\r\n                        onChange={handleAddBodyChange}\r\n                        className=\"block border\">\r\n                        {addBodyText}\r\n                    </textarea>\r\n                    <button className=\"block\" onClick={handleAddClick}>\r\n                        Adicionar\r\n                    </button>\r\n            </fieldset>\r\n            <div>\r\n                {!loading && posts.length > 0 &&\r\n                    <div className=\"my-10\"> \r\n                        <h1>Total de Posts: {posts.length}</h1>\r\n                    </div>\r\n                }\r\n            </div>\r\n            <div>\r\n                {posts.map((item, index) =>(\r\n                    <div key={index} \r\n                        style={{\r\n                            border: '1px solid black', \r\n                            borderRadius: '10px' , \r\n                            marginBottom: '10px', \r\n                            padding: '10px'}}>\r\n\r\n                        <h4 className=\"font-bold\">\r\n                            {item.title}\r\n                        </h4>\r\n                        <small>#{item.id} - Usuário: {item.userId}</small>\r\n                        <p>{item.body}</p>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            {!loading && posts.length === 0 &&\r\n                <div>\r\n                    <h1>Não há posts para serem exibidos.</h1>\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n\r\n}\r\nexport default JSONPlaceholder;"]},"metadata":{},"sourceType":"module"}