{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USUARIO\\\\reactjs-study\\\\src\\\\components\\\\JSONPlaceholder\\\\JSONPlaceholder.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { PostForm } from \"./PostForm\";\nimport { PostItem } from \"./PostItem\";\nimport { api } from \"../../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst JSONPlaceholder = () => {\n  _s();\n\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    loadPosts();\n  }, []);\n\n  const loadPosts = async () => {\n    setLoading(true);\n    let json = await api.getAllPosts();\n    setLoading(false);\n    setPosts(json);\n  };\n\n  const handleAddPost = async (title, body) => {\n    let json = await api.addNewPost(title, body, 1);\n\n    if (json.id) {\n      alert(\"Post adicionado com sucesso!\");\n    } else {\n      alert(\"Ocorreu algum erro :(\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Carregando...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(PostForm, {\n      onAdd: handleAddPost\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: !loading && posts.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"my-10\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Total de Posts: \", posts.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: posts.map((item, index) => /*#__PURE__*/_jsxDEV(PostItem, {\n        data: item\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), !loading && posts.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"N\\xE3o h\\xE1 posts para serem exibidos.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s(JSONPlaceholder, \"B1HzkMAPjjnIS0Dl8KHRKFHtmnE=\");\n\n_c = JSONPlaceholder;\nexport default JSONPlaceholder;\n\nvar _c;\n\n$RefreshReg$(_c, \"JSONPlaceholder\");","map":{"version":3,"sources":["C:/Users/USUARIO/reactjs-study/src/components/JSONPlaceholder/JSONPlaceholder.jsx"],"names":["useEffect","useState","PostForm","PostItem","api","JSONPlaceholder","posts","setPosts","loading","setLoading","loadPosts","json","getAllPosts","handleAddPost","title","body","addNewPost","id","alert","length","map","item","index"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,SAASC,GAAT,QAAoB,WAApB;;;AACA,MAAMC,eAAe,GAAG,MAAM;AAAA;;AAC5B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,KAAD,CAAtC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,SAAS;AACV,GAFQ,EAEN,EAFM,CAAT;;AAGA,QAAMA,SAAS,GAAG,YAAY;AAC5BD,IAAAA,UAAU,CAAC,IAAD,CAAV;AACA,QAAIE,IAAI,GAAG,MAAMP,GAAG,CAACQ,WAAJ,EAAjB;AACAH,IAAAA,UAAU,CAAC,KAAD,CAAV;AACAF,IAAAA,QAAQ,CAACI,IAAD,CAAR;AACD,GALD;;AAMA,QAAME,aAAa,GAAG,OAAOC,KAAP,EAAcC,IAAd,KAAuB;AAC3C,QAAIJ,IAAI,GAAG,MAAMP,GAAG,CAACY,UAAJ,CAAeF,KAAf,EAAsBC,IAAtB,EAA4B,CAA5B,CAAjB;;AACA,QAAIJ,IAAI,CAACM,EAAT,EAAa;AACXC,MAAAA,KAAK,CAAC,8BAAD,CAAL;AACD,KAFD,MAEO;AACLA,MAAAA,KAAK,CAAC,uBAAD,CAAL;AACD;AACF,GAPD;;AAQA,sBACE;AAAA,eACGV,OAAO,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADd,eAEE,QAAC,QAAD;AAAU,MAAA,KAAK,EAAEK;AAAjB;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,gBACG,CAACL,OAAD,IAAYF,KAAK,CAACa,MAAN,GAAe,CAA3B,iBACC;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,+BACE;AAAA,yCAAqBb,KAAK,CAACa,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,YAHF,eAUE;AAAA,gBACGb,KAAK,CAACc,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,kBACT,QAAC,QAAD;AAAU,QAAA,IAAI,EAAED;AAAhB;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAVF,EAeG,CAACb,OAAD,IAAYF,KAAK,CAACa,MAAN,KAAiB,CAA7B,iBACC;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD,CA3CD;;GAAMd,e;;KAAAA,e;AA4CN,eAAeA,eAAf","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { PostForm } from \"./PostForm\";\r\nimport { PostItem } from \"./PostItem\";\r\nimport { api } from \"../../api\";\r\nconst JSONPlaceholder = () => {\r\n  const [posts, setPosts] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  useEffect(() => {\r\n    loadPosts();\r\n  }, []);\r\n  const loadPosts = async () => {\r\n    setLoading(true);\r\n    let json = await api.getAllPosts();\r\n    setLoading(false);\r\n    setPosts(json);\r\n  };\r\n  const handleAddPost = async (title, body) => {\r\n    let json = await api.addNewPost(title, body, 1);\r\n    if (json.id) {\r\n      alert(\"Post adicionado com sucesso!\");\r\n    } else {\r\n      alert(\"Ocorreu algum erro :(\");\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      {loading && <div>Carregando...</div>}\r\n      <PostForm onAdd={handleAddPost} />\r\n      <div>\r\n        {!loading && posts.length > 0 && (\r\n          <div className=\"my-10\">\r\n            <h1>Total de Posts: {posts.length}</h1>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div>\r\n        {posts.map((item, index) => (\r\n          <PostItem data={item} />\r\n        ))}\r\n      </div>\r\n      {!loading && posts.length === 0 && (\r\n        <div>\r\n          <h1>Não há posts para serem exibidos.</h1>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default JSONPlaceholder;\r\n"]},"metadata":{},"sourceType":"module"}