{"ast":null,"code":"import axios from \"axios\";\nconst axiosInstance = axios.create({\n  baseURL: \"https://jsonplaceholder.typicode.com\"\n});\nexport const api = {\n  getAllPosts: async () => {\n    let response = await axiosInstance.get('/posts');\n    return response.data; // let response = await fetch(`${baseURL}/posts`);\n    // let json = await response.json();\n    // return json;\n  },\n  getAllAlbums: async () => {\n    let response = await axiosInstance.get('/albums');\n    return response.data; // let response = await fetch(`${baseURL}/posts`);\n    // let json = await response.json();\n    // return json;\n  },\n  getAllPhotos: async () => {\n    let response = await axiosInstance.get('/photos');\n    return response.data; // let response = await fetch(`${baseURL}/posts`);\n    // let json = await response.json();\n    // return json;\n  },\n  addNewPost: async (title, body, userId) => {\n    let response = await axiosInstance.post('/posts', {\n      title,\n      body,\n      userId\n    });\n    return response.data; // let response = await fetch(`${baseURL}/posts`, {\n    //     method: \"POST\",\n    //     body: JSON.stringify({\n    //       title,\n    //       body,\n    //       userId\n    //     }),\n    //     headers: {\n    //       \"Content-Type\": \"application/json\",\n    //     },\n    //   });\n    //   let json = await response.json();\n    //   return json;\n  }\n};","map":{"version":3,"sources":["C:/Users/USUARIO/reactjs-study/src/api.js"],"names":["axios","axiosInstance","create","baseURL","api","getAllPosts","response","get","data","getAllAlbums","getAllPhotos","addNewPost","title","body","userId","post"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,aAAa,GAAGD,KAAK,CAACE,MAAN,CAAa;AACjCC,EAAAA,OAAO,EAAE;AADwB,CAAb,CAAtB;AAGA,OAAO,MAAMC,GAAG,GAAG;AACfC,EAAAA,WAAW,EAAE,YAAY;AACrB,QAAIC,QAAQ,GAAG,MAAML,aAAa,CAACM,GAAd,CAAkB,QAAlB,CAArB;AACA,WAAOD,QAAQ,CAACE,IAAhB,CAFqB,CAGrB;AACA;AACA;AACH,GAPc;AAQfC,EAAAA,YAAY,EAAE,YAAY;AACxB,QAAIH,QAAQ,GAAG,MAAML,aAAa,CAACM,GAAd,CAAkB,SAAlB,CAArB;AACA,WAAOD,QAAQ,CAACE,IAAhB,CAFwB,CAGxB;AACA;AACA;AACD,GAdc;AAefE,EAAAA,YAAY,EAAE,YAAY;AACxB,QAAIJ,QAAQ,GAAG,MAAML,aAAa,CAACM,GAAd,CAAkB,SAAlB,CAArB;AACA,WAAOD,QAAQ,CAACE,IAAhB,CAFwB,CAGxB;AACA;AACA;AACD,GArBc;AAsBfG,EAAAA,UAAU,EAAE,OAAOC,KAAP,EAAcC,IAAd,EAAoBC,MAApB,KAA+B;AACvC,QAAIR,QAAQ,GAAG,MAAML,aAAa,CAACc,IAAd,CAAmB,QAAnB,EAA6B;AAChDH,MAAAA,KADgD;AACzCC,MAAAA,IADyC;AACnCC,MAAAA;AADmC,KAA7B,CAArB;AAGA,WAAOR,QAAQ,CAACE,IAAhB,CAJuC,CAMvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH;AAzCc,CAAZ","sourcesContent":["import axios from \"axios\";\r\n\r\nconst axiosInstance = axios.create({\r\n  baseURL: \"https://jsonplaceholder.typicode.com\"\r\n})\r\nexport const api = {\r\n    getAllPosts: async () => {\r\n        let response = await axiosInstance.get('/posts')\r\n        return response.data;\r\n        // let response = await fetch(`${baseURL}/posts`);\r\n        // let json = await response.json();\r\n        // return json;\r\n    },\r\n    getAllAlbums: async () => {\r\n      let response = await axiosInstance.get('/albums')\r\n      return response.data;\r\n      // let response = await fetch(`${baseURL}/posts`);\r\n      // let json = await response.json();\r\n      // return json;\r\n    },\r\n    getAllPhotos: async () => {\r\n      let response = await axiosInstance.get('/photos')\r\n      return response.data;\r\n      // let response = await fetch(`${baseURL}/posts`);\r\n      // let json = await response.json();\r\n      // return json;\r\n    },\r\n    addNewPost: async (title, body, userId) => {\r\n        let response = await axiosInstance.post('/posts', {\r\n          title, body, userId\r\n        });\r\n        return response.data;\r\n\r\n        // let response = await fetch(`${baseURL}/posts`, {\r\n        //     method: \"POST\",\r\n        //     body: JSON.stringify({\r\n        //       title,\r\n        //       body,\r\n        //       userId\r\n        //     }),\r\n        //     headers: {\r\n        //       \"Content-Type\": \"application/json\",\r\n        //     },\r\n        //   });\r\n        //   let json = await response.json();\r\n        //   return json;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}