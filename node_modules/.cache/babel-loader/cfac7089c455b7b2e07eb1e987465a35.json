{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USUARIO\\\\reactjs-study\\\\src\\\\Reducer\\\\ReducerUse.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  count: 0\n};\n\nconst reducerFunction = (state, action) => {\n  switch (action.type) {\n    case \"ADD\":\n      return { ...state,\n        count: state.count + 1\n      };\n      break;\n\n    case \"DEL\":\n      if (state.count > 0) {\n        return { ...state,\n          count: state.count - 1\n        };\n      }\n\n      break;\n\n    case \"RESET\":\n      return initialState;\n      break;\n  }\n\n  return state;\n};\n\nconst useReducerCounter = () => {\n  _s();\n\n  return useReducer(reducerFunction, initialState);\n};\n\n_s(useReducerCounter, \"skVOqNGrFQuDFh+lpttAJ2AZFeA=\");\n\nconst ReducerCounter = () => {\n  _s2();\n\n  const [state, dispatch] = useReducerCounter();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex justify-center flex-col\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Contagem: \", state.count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch({\n        type: \"ADD\"\n      }),\n      children: \"Adicionar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch({\n        type: \"DEL\"\n      }),\n      children: \"Remover\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch({\n        type: \"RESET\"\n      }),\n      children: \"Resetar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(ReducerCounter, \"Ss/GpUg7+tQFAuDQEAdptiNbKM0=\", false, function () {\n  return [useReducerCounter];\n});\n\n_c = ReducerCounter;\nexport default ReducerCounter;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReducerCounter\");","map":{"version":3,"sources":["C:/Users/USUARIO/reactjs-study/src/Reducer/ReducerUse.jsx"],"names":["useReducer","initialState","count","reducerFunction","state","action","type","useReducerCounter","ReducerCounter","dispatch"],"mappings":";;;;AAAA,SAASA,UAAT,QAA2B,OAA3B;;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE;AADY,CAArB;;AAGA,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACzC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,KAAL;AACE,aAAO,EAAE,GAAGF,KAAL;AAAYF,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,GAAc;AAAjC,OAAP;AACA;;AACF,SAAK,KAAL;AACE,UAAIE,KAAK,CAACF,KAAN,GAAc,CAAlB,EAAqB;AACnB,eAAO,EAAE,GAAGE,KAAL;AAAYF,UAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,GAAc;AAAjC,SAAP;AACD;;AACD;;AACF,SAAK,OAAL;AACE,aAAOD,YAAP;AACA;AAXJ;;AAaA,SAAOG,KAAP;AACD,CAfD;;AAiBA,MAAMG,iBAAiB,GAAG,MAAM;AAAA;;AAC9B,SACEP,UAAU,CAACG,eAAD,EAAkBF,YAAlB,CADZ;AAGD,CAJD;;GAAMM,iB;;AAKN,MAAMC,cAAc,GAAG,MAAM;AAAA;;AACzB,QAAM,CAACJ,KAAD,EAAQK,QAAR,IAAoBF,iBAAiB,EAA3C;AACA,sBACI;AAAK,IAAA,SAAS,EAAC,8BAAf;AAAA,4BACI;AAAA,+BAAeH,KAAK,CAACF,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAQ,MAAA,OAAO,EAAE,MAAMO,QAAQ,CAAC;AAAEH,QAAAA,IAAI,EAAE;AAAR,OAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAQ,MAAA,OAAO,EAAE,MAAMG,QAAQ,CAAC;AAAEH,QAAAA,IAAI,EAAE;AAAR,OAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAQ,MAAA,OAAO,EAAE,MAAMG,QAAQ,CAAC;AAAEH,QAAAA,IAAI,EAAE;AAAR,OAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CAVD;;IAAME,c;UACwBD,iB;;;KADxBC,c;AAWN,eAAeA,cAAf","sourcesContent":["import { useReducer } from \"react\";\r\n\r\nconst initialState = {\r\n  count: 0,\r\n};\r\nconst reducerFunction = (state, action) => {\r\n  switch (action.type) {\r\n    case \"ADD\":\r\n      return { ...state, count: state.count + 1 };\r\n      break;\r\n    case \"DEL\":\r\n      if (state.count > 0) {\r\n        return { ...state, count: state.count - 1 };\r\n      }\r\n      break;\r\n    case \"RESET\":\r\n      return initialState;\r\n      break;\r\n  }\r\n  return state;\r\n};\r\n\r\nconst useReducerCounter = () => {\r\n  return (\r\n    useReducer(reducerFunction, initialState)\r\n  );\r\n};\r\nconst ReducerCounter = () => {\r\n    const [state, dispatch] = useReducerCounter();\r\n    return (\r\n        <div className=\"flex justify-center flex-col\">\r\n            <h1>Contagem: {state.count}</h1>\r\n            <button onClick={() => dispatch({ type: \"ADD\" })}>Adicionar</button>\r\n            <button onClick={() => dispatch({ type: \"DEL\" })}>Remover</button>\r\n            <button onClick={() => dispatch({ type: \"RESET\" })}>Resetar</button>\r\n        </div>\r\n    );  \r\n}\r\nexport default ReducerCounter;\r\n\r\n"]},"metadata":{},"sourceType":"module"}