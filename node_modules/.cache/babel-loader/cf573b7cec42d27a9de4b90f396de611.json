{"ast":null,"code":"var _jsxFileName = \"/home/juan/reactjs-study/src/components/InputFunction/Input.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Input = () => {\n  _s();\n\n  const [name, setName] = useState('');\n\n  const handleInput = event => {\n    setName(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"contador\",\n    children: [\"Nome:\", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: name,\n      onChange: handleInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), \"Seu nome \\xE9:\", ` ${name}`]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Input, \"/PAWDgWx7+Y6BmsFMUKcdrcX5eM=\");\n\n_c = Input;\nexport default Input;\n\nvar _c;\n\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"sources":["/home/juan/reactjs-study/src/components/InputFunction/Input.jsx"],"names":["React","useState","Input","name","setName","handleInput","event","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,QAAQ,CAAC,EAAD,CAAhC;;AAEA,QAAMI,WAAW,GAAIC,KAAD,IAAgD;AAChEF,IAAAA,OAAO,CAAEE,KAAK,CAACC,MAAN,CAAaC,KAAf,CAAP;AACH,GAFD;;AAKA,sBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,qCAEI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,KAAK,EAAGL,IAA3B;AAAiC,MAAA,QAAQ,EAAEE;AAA3C;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA;AAAA;AAAA;AAAA,YAHJ,oBAKM,IAAGF,IAAK,EALd;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CAlBD;;GAAMD,K;;KAAAA,K;AAmBN,eAAeA,KAAf","sourcesContent":["import React, { useState } from \"react\";\n\nconst Input = () => {\n    const [name, setName] = useState('');\n\n    const handleInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setName( event.target.value)\n    }\n\n\n    return (\n        <div className=\"contador\">\n            Nome: \n            <input type=\"text\" value= {name} onChange={handleInput}/>\n            <hr />\n            Seu nome Ã©: \n            {` ${name}`}\n            \n        </div>\n    )\n}\nexport default Input;"]},"metadata":{},"sourceType":"module"}